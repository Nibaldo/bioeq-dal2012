package com.example.medisearch2;

import java.io.IOException;
import java.util.ArrayList;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;
import org.ksoap2.SoapEnvelope;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;
import org.ksoap2.serialization.SoapSerializationEnvelope;
import org.ksoap2.transport.HttpTransportSE;
import org.xmlpull.v1.XmlPullParserException;

import com.example.medisearch2.BuscadorBioequivalente.ObtenerPacientesBackground;
import com.example.medisearch2.BuscadorBioequivalente.PacientesAdapter;
import com.google.gson.JsonObject;

import android.os.AsyncTask;
import android.os.Bundle;
import android.app.Activity;
import android.app.ListActivity;
import android.app.ProgressDialog;
import android.content.Context;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.Menu;
import android.view.View;
import android.view.ViewGroup;
import android.view.View.OnClickListener;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ListView;
import android.widget.TextView;
import android.widget.Toast;

public class BuscadorMedicamento_Uso extends ListActivity {
	
	private TextView txtResultadoServicio;
	private EditText  txtCadenaBusqueda;
	ArrayList<Medicamento> pacientes;
	// Constantes para la invocacion del web service
		private String URL = Constantes.HOST
				+ "/MedisearchWs/services/MedicamentoORMWS";
		private String NAMESPACE = "http://ws";
		
	private ArrayList<Medicamento> listaPaciente = null;
		private PacientesAdapter m_adapter;
		
	 Button btnActualizar;
		

    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_buscador_medicamento__uso);
       
        
    	//new ObtenerPacientesBackground().execute();
    	
         txtCadenaBusqueda = (EditText) findViewById(R.id.editBusqueda);
    	btnActualizar = (Button) findViewById(R.id.btn_todos_paciente_actualizar);
    	btnActualizar.setOnClickListener(pulsarBoton);

    		
    }
    
	// Actions that are generated by click
	private OnClickListener pulsarBoton = new OnClickListener() {
		public void onClick(View v) {
			switch (v.getId()) {

			case R.id.btn_todos_paciente_actualizar:
				
				JsonObject jsonObjectPrestacionPaciente = new JsonObject();
			
						jsonObjectPrestacionPaciente.addProperty("stringBusqueda", txtCadenaBusqueda.getText().toString());
				
				new ObtenerMedicamentoBackground().execute((jsonObjectPrestacionPaciente.toString()));
				
			}
			};
		};
    
    @Override
   	protected void onResume() {
   		// TODO Auto-generated method stub
   		super.onResume();
   		listaPaciente = new ArrayList<Medicamento>();
   	//	setListAdapter(new PacientesAdapter(TabTodosPacientes.this, 0, listaPaciente));
   	}
    
	@Override
	protected void onListItemClick(ListView l, View v, int position, long id) {
		// TODO Auto-generated method stub
   // 	Intent intent = new Intent(TabTodosPacientes.this, UpdatePaciente.class);
   // 	intent.putExtra("paciente",listaPaciente.get(position));
    //	startActivity(intent);
	}


    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
 //       getMenuInflater().inflate(R.menu.activity_tab_todos_pacientes, menu);
        return true;
    }
    
    
 class ObtenerMedicamentoBackground extends AsyncTask<String, Void, String>{
    	
    	private ProgressDialog progressDialog;

		@Override
		protected void onPreExecute() {
    		progressDialog = ProgressDialog.show(
    				BuscadorMedicamento_Uso.this,
    				"Buscando Medicamento", 
    				"Espere mientras se realiza la busqueda...", 
    				true);
			super.onPreExecute();
		}

		@Override
		protected String doInBackground(String... params) {

			String resultadoJSON="";
	
	    	String METHOD_NAME = "buscarGenericoPorUso";
	    	String SOAP_ACTION = NAMESPACE +"/" +METHOD_NAME;
			SoapObject request = new SoapObject(NAMESPACE, METHOD_NAME);
			SoapSerializationEnvelope soapEnvelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);
			soapEnvelope.dotNet = true;
			soapEnvelope.implicitTypes =true;
			soapEnvelope.setOutputSoapObject(request);
			request.addProperty("jsonPalabraABuscar", params[0]);
			// Objeto que representa el modelo de transporte
			// Recibe la URL del ws

			HttpTransportSE aht = new HttpTransportSE(URL);
			Log.d("Cliente SOAP", "Iniciando Consulta");
			try {
				aht.call(SOAP_ACTION, soapEnvelope);
			
				SoapPrimitive resultString = (SoapPrimitive)soapEnvelope.getResponse();
				resultadoJSON = resultString.toString();
				Log.d("resultado consulta JSOn", resultadoJSON);
				
				
			} catch (IOException e) {
				e.printStackTrace();
			} catch (XmlPullParserException e) {
				e.printStackTrace();
			}
	    
			return resultadoJSON;
		}

		@Override
		protected void onPostExecute(String result) {
			super.onPostExecute(result);
			progressDialog.dismiss();
			
			
			if("".equals(result)){
			
				Toast.makeText(BuscadorMedicamento_Uso.this, "Error al obtener la informacion necesaria", Toast.LENGTH_LONG).show();
			}else{
				try {
			
					String texto = "";
					////////////////////////////////////77
					listaPaciente = new ArrayList<Medicamento>();
			
				//	JSONObject resultado = new JSONObject(result);
			//		texto += resultado.getString("Titulo") +"\n";
			//		String contenido = resultado.getString("Contenido");
					Log.d("ClienteSoap contenido", result);
					JSONArray jsonArray = new JSONArray(result);

				
					  //Recorrer JSON con un for
					if (jsonArray != null) {
						for (int i = 0; i < jsonArray.length(); i++) {

							JSONObject jo = (JSONObject) jsonArray.get(i);

							Medicamento generico = new Medicamento();

							// Adherimos los distintos campos jason al arraylis en el
							// cupo correspondiente
							generico.setPrincipioActivo(jo.getString("principioActivo"));
							generico.setProducto(jo.getString("Producto"));
							generico.setUsoTratamiento(jo.getString("usoTratamiento"));
							generico.setTitular((jo.getString("Titular")));
					
					// Añadimos las prestaciones a la lista
							listaPaciente.add(generico);
							Log.d("lista Pacientes", listaPaciente.toString());
				
					}
					}
					setListAdapter(new PacientesAdapter(BuscadorMedicamento_Uso.this, 0, listaPaciente));

				} catch (JSONException e) {
					Toast.makeText(BuscadorMedicamento_Uso.this, "Error al obtener la informacion necesaria", Toast.LENGTH_LONG).show();
				}
			}
		}
			
    }
 
 
 
 
 //Clase encargada de poner todos los elementos en la lista
 public class PacientesAdapter extends ArrayAdapter<Medicamento> {

		private ArrayList<Medicamento> items;
		
		public PacientesAdapter(Context context, int textViewResourceId,
				ArrayList<Medicamento> items) {
			super(context, textViewResourceId, items);
			this.items = items;

		}

		// Luego el método más importante que es el getView. Este método es el
		// encargado de crear cada elemento visual de nuestra listview. Hace de
		// nexo entre los datos y la interfaz grafica.

		@Override
		public View getView(int position, View convertView, ViewGroup parent) {
			View item = convertView;

			if (item == null) {
				LayoutInflater vi = (LayoutInflater) getSystemService(Context.LAYOUT_INFLATER_SERVICE);
				item = vi.inflate(R.layout.lista_m_uso, null);
			}
			Medicamento medicamentos = items.get(position);
			if (medicamentos != null) {

				// //poblamos la lista de elementos

				TextView lblNombreGenerico = (TextView) item
						.findViewById(R.id.txtListaNombreGenerico_uso);


				

				TextView lblNombreMarca = (TextView) item.findViewById(R.id.txtListaNombreMarca_uso);
				
				TextView lblTitular = (TextView) item
						.findViewById(R.id.txtListaUsoTratamiento_uso);
				
				TextView lblTratamiento = (TextView) item
						.findViewById(R.id.txtListaUsoTratamiento_uso);

				
			
				if (lblNombreGenerico != null) {
					lblNombreGenerico.setText("Principio Activo: " +medicamentos.getPrincipioActivo());

				}
				
				if (lblNombreMarca != null ) {
					lblNombreMarca.setText(" Producto: " + medicamentos.getProducto());
				
				}
				if (lblTitular != null && lblNombreMarca != null) {
					lblTitular.setText(" " + medicamentos.getTitular());
					
				}
				if (lblTratamiento != null) {
					lblTratamiento.setText(medicamentos.getUsoTratamiento());
						
				}

			}
			return item;
		}
	}
 
 ///////////////////////////////////////
    
    
 }


